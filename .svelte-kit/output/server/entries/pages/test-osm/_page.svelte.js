import { c as create_ssr_component, d as add_attribute } from "../../../chunks/ssr.js";
import "maplibre-gl";
/* empty css                          */
import { e as escape } from "../../../chunks/escape.js";
const css = {
  code: ".map-container.svelte-1hormn2{width:100%;height:100vh}.status.svelte-1hormn2{position:absolute;top:10px;left:10px;background:white;padding:10px;border-radius:5px;z-index:1000;font-family:Arial, sans-serif}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import { onMount } from 'svelte';\\n  import maplibregl from 'maplibre-gl';\\n  import 'maplibre-gl/dist/maplibre-gl.css';\\n\\n  let mapContainer;\\n  let map;\\n  let tileLoadCount = 0;\\n  let statusMessage = 'Loading map...';\\n\\n  onMount(() => {\\n    if (mapContainer) {\\n      // Initialize MapLibre GL map with OpenStreetMap tiles\\n      map = new maplibregl.Map({\\n        container: mapContainer,\\n        style: {\\n          version: 8,\\n          sources: {\\n            'openstreetmap': {\\n              type: 'raster',\\n              tiles: ['https://tile.openstreetmap.org/{z}/{x}/{y}.png'],\\n              tileSize: 256,\\n              attribution: 'Â© OpenStreetMap contributors'\\n            }\\n          },\\n          layers: [{\\n            id: 'openstreetmap-layer',\\n            type: 'raster',\\n            source: 'openstreetmap',\\n            minzoom: 0,\\n            maxzoom: 19\\n          }]\\n        },\\n        center: [0, 0], // Start at coordinates [0, 0]\\n        zoom: 2\\n      });\\n\\n      // Add navigation controls\\n      map.addControl(new maplibregl.NavigationControl(), 'top-right');\\n\\n      // Map event handlers\\n      map.on('load', () => {\\n        console.log('Map loaded successfully with OpenStreetMap tiles');\\n        statusMessage = 'Map loaded successfully! Waiting for tiles...';\\n      });\\n\\n      // Count tile loads\\n      map.on('dataloading', (e) => {\\n        if (e.dataType === 'source' && e.sourceDataType === 'content') {\\n          tileLoadCount++;\\n          statusMessage = \`Map loaded. Tiles loaded: \${tileLoadCount}\`;\\n        }\\n      });\\n\\n      map.on('error', (e) => {\\n        console.error('Map error:', e);\\n        statusMessage = 'Error loading map: ' + e.error.message;\\n      });\\n    }\\n  });\\n<\/script>\\n\\n<style>\\n  .map-container {\\n    width: 100%;\\n    height: 100vh;\\n  }\\n  \\n  .status {\\n    position: absolute;\\n    top: 10px;\\n    left: 10px;\\n    background: white;\\n    padding: 10px;\\n    border-radius: 5px;\\n    z-index: 1000;\\n    font-family: Arial, sans-serif;\\n  }\\n</style>\\n\\n<div class=\\"status\\">{statusMessage}</div>\\n<div bind:this={mapContainer} class=\\"map-container\\"></div>"],"names":[],"mappings":"AA+DE,6BAAe,CACb,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KACV,CAEA,sBAAQ,CACN,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,IAAI,CACV,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,KAAK,CAAC,CAAC,UACtB"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let statusMessage = "Loading map...";
  $$result.css.add(css);
  return `<div class="status svelte-1hormn2">${escape(statusMessage)}</div> <div class="map-container svelte-1hormn2"${add_attribute()}></div>`;
});
export {
  Page as default
};
